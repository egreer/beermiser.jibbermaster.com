{"version":3,"sources":["pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","name","alcohol","alcohol_unit","volume","volume_unit","price","stored","calculation","apv_calculation","ppv_calculation","Home","state","cloneDeep","componentDidMount","store","get","setState","persistState","callback","set","isFunction","handleChange","event","target","value","updateCalculation","saveCurrent","console","log","brew","id","uuidv4","push","assign","orderBy","calculateCalculations","localAlcohol","localVolume","localAPVCalculation","localPPVCalculation","localCalculation","reCalculateAll","forEach","storedBrew","removeBrew","remove","editBrew","reset","renderCalculation","Alert","color","toFixed","className","style","opacity","renderResults","rows","map","i","Fragment","key","ButtonGroup","Button","onClick","size","parseFloat","length","Table","dark","this","title","rel","href","Form","autoComplete","FormGroup","row","Col","sm","InputGroup","Input","type","placeholder","onChange","min","InputGroupAddon","addonType","step","Row","offset","block","Component","App","isOpen","disclaimerDismissed","displayText","displayImages","devTools","displayGatherer","toggle","titleTemplate","path","exact","render","props","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3757bde.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n  Table\n} from \"reactstrap\";\nimport { assign, set, isFunction, cloneDeep, remove, orderBy } from \"lodash\";\nimport store from \"store\";\nimport uuidv4 from \"uuid/v4\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  alcohol: \"\",\n  alcohol_unit: \"APV\",\n  volume: \"\",\n  volume_unit: \"Oz\",\n  price: \"\",\n  stored: [],\n  calculation: null,\n  apv_calculation: null,\n  ppv_calculation: null\n};\n\nexport class Home extends Component {\n  state = cloneDeep(INITIAL_STATE);\n\n  componentDidMount = () => {\n    const state = store.get(\"beermiser-state\") || cloneDeep(INITIAL_STATE);\n    this.setState(state);\n  };\n\n  persistState = (state, callback) => {\n    this.setState(state, () => {\n      store.set(\"beermiser-state\", this.state);\n      if (isFunction(callback)) {\n        callback();\n      }\n    });\n  };\n\n  handleChange = event => {\n    this.persistState(\n      set({}, event.target.name, event.target.value),\n      this.updateCalculation\n    );\n  };\n\n  saveCurrent = () => {\n    console.log(\"Save Current\", this.state);\n    const {\n      alcohol,\n      alcohol_unit,\n      volume,\n      volume_unit,\n      name,\n      price,\n      apv_calculation,\n      ppv_calculation,\n      calculation,\n      stored\n    } = this.state;\n    const brew = {\n      id: uuidv4(),\n      name,\n      alcohol,\n      alcohol_unit,\n      volume,\n      volume_unit,\n      price,\n      calculation,\n      apv_calculation,\n      ppv_calculation\n    };\n    stored.push(brew);\n\n    this.persistState(\n      assign(cloneDeep(INITIAL_STATE), {\n        stored: orderBy(\n          stored,\n          [\"calculation\", \"apv_calculation\", \"ppv_calculation\"],\n          [\"asc\", \"desc\", \"asc\"]\n        )\n      })\n    );\n  };\n\n  updateCalculation = () => {\n    this.persistState(this.calculateCalculations(this.state));\n  };\n\n  calculateCalculations = brew => {\n    const { alcohol, alcohol_unit, volume, volume_unit, price } = brew;\n\n    var localAlcohol = alcohol;\n    var localVolume = volume;\n    var localAPVCalculation = null;\n    var localPPVCalculation = null;\n    var localCalculation = null;\n\n    if (alcohol_unit === \"ABW\") {\n      localAlcohol = alcohol * 1.25;\n    }\n\n    if (volume_unit === \"mL\") {\n      localVolume = volume * 0.03381;\n    } else if (volume_unit === \"L\") {\n      localVolume = volume * 1000 * 0.03381;\n    }\n\n    if (localAlcohol && localAlcohol > 0 && localVolume && localVolume > 0) {\n      localAPVCalculation = (localAlcohol / 100) * localVolume;\n    }\n\n    if (localVolume && localVolume > 0 && price && price > 0) {\n      localPPVCalculation = price / localVolume;\n    }\n\n    if (\n      localAlcohol &&\n      localAlcohol > 0 &&\n      localVolume &&\n      localVolume > 0 &&\n      price &&\n      price > 0\n    ) {\n      localCalculation = price / ((localAlcohol / 100) * localVolume);\n    }\n\n    // console.log(\"localCalculation\", localCalculation);\n    // console.log(\"localAPVCalculation\", localAPVCalculation);\n    // console.log(\"localPPVCalculation\", localPPVCalculation);\n\n    return {\n      calculation: localCalculation,\n      apv_calculation: localAPVCalculation,\n      ppv_calculation: localPPVCalculation\n    };\n  };\n\n  reCalculateAll = () => {\n    const { stored } = this.state;\n    stored.forEach(storedBrew => {\n      assign(storedBrew, this.calculateCalculations(storedBrew));\n    });\n    this.persistState({\n      stored: orderBy(\n        stored,\n        [\"calculation\", \"apv_calculation\", \"ppv_calculation\"],\n        [\"asc\", \"desc\", \"asc\"]\n      )\n    });\n  };\n\n  removeBrew = id => {\n    const { stored } = this.state;\n    remove(stored, storedBrew => storedBrew.id === id);\n    this.persistState({ stored });\n  };\n\n  editBrew = brew => {\n    this.persistState(brew);\n    this.removeBrew(brew.id);\n  };\n\n  reset = () => {\n    this.persistState(cloneDeep(INITIAL_STATE));\n  };\n\n  render() {\n    const {\n      name,\n      alcohol,\n      alcohol_unit,\n      volume,\n      volume_unit,\n      price\n    } = this.state;\n\n    return (\n      <div className=\"home\">\n        <Helmet title=\"BeerMiser\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <h1 className=\"text-center\">BeerMiser</h1>\n        <Form className=\"mt-4\" autoComplete={\"off\"}>\n          <FormGroup row>\n            <Col sm={12}>\n              <InputGroup>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  value={name}\n                  onChange={this.handleChange}\n                />\n              </InputGroup>\n            </Col>\n          </FormGroup>\n\n          <FormGroup row>\n            <Col sm={12}>\n              <InputGroup>\n                <Input\n                  type=\"number\"\n                  name=\"alcohol\"\n                  placeholder=\"Alcohol\"\n                  value={alcohol}\n                  onChange={this.handleChange}\n                  min={0}\n                />\n                <InputGroupAddon addonType=\"append\">\n                  <Input\n                    type=\"select\"\n                    name=\"alcohol_unit\"\n                    value={alcohol_unit}\n                    className={\"ml-2\"}\n                    onChange={this.handleChange}\n                  >\n                    <option>APV</option>\n                    <option>ABW</option>\n                  </Input>\n                </InputGroupAddon>\n              </InputGroup>\n            </Col>\n          </FormGroup>\n\n          <FormGroup row>\n            <Col sm={12}>\n              <InputGroup>\n                <Input\n                  type=\"number\"\n                  name=\"volume\"\n                  placeholder=\"Volume\"\n                  value={volume}\n                  onChange={this.handleChange}\n                  min={0}\n                />\n                <InputGroupAddon addonType=\"append\">\n                  <Input\n                    type=\"select\"\n                    name=\"volume_unit\"\n                    value={volume_unit}\n                    className={\"ml-2\"}\n                    onChange={this.handleChange}\n                  >\n                    <option>Oz</option>\n                    <option>mL</option>\n                    <option>L</option>\n                  </Input>\n                </InputGroupAddon>\n              </InputGroup>\n            </Col>\n          </FormGroup>\n\n          <FormGroup row>\n            <Col sm={12}>\n              <InputGroup>\n                <Input\n                  type=\"number\"\n                  name=\"price\"\n                  placeholder=\"Price\"\n                  value={price}\n                  onChange={this.handleChange}\n                  min={0}\n                  step={0.01}\n                />\n                <InputGroupAddon addonType=\"append\">$</InputGroupAddon>\n              </InputGroup>\n            </Col>\n          </FormGroup>\n\n          <Row>\n            <Col>\n              <div className=\"text-center my-2\">{this.renderCalculation()}</div>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={{ size: 6, offset: 6 }}>\n              <Button block color=\"success\" onClick={this.saveCurrent}>\n                Save\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n\n        <Row>\n          <Col>\n            <div className=\"text-center my-2\">{this.renderResults()}</div>\n          </Col>\n        </Row>\n        {\n          // <div className=\"pt-5\">\n          //   <Button block color=\"danger\" onClick={this.reCalculateAll}>\n          //     reCalculateAll\n          //   </Button>\n          // </div>\n        }\n        <div className=\"pt-5\">\n          <Button block color=\"danger\" onClick={this.reset}>\n            Reset\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderCalculation = () => {\n    const { calculation, apv_calculation, ppv_calculation } = this.state;\n    if (calculation || apv_calculation || ppv_calculation) {\n      return (\n        <Alert color=\"success\">\n          {calculation && (\n            <h5>\n              {calculation.toFixed(3)}\n              <small className=\"noselect px-1 text-nowrap\">\n                <sup>$</sup>/<sub>A</sub>\n              </small>\n            </h5>\n          )}\n          {apv_calculation && (\n            <h5>\n              {apv_calculation.toFixed(3)}\n              <small className=\"noselect px-1\">Alc</small>\n            </h5>\n          )}\n          {ppv_calculation && (\n            <h5>\n              {ppv_calculation.toFixed(3)}\n              <small className=\"noselect px-1\">\n                <sup>$</sup>/<sub>oz</sub>\n              </small>\n            </h5>\n          )}\n        </Alert>\n      );\n    } else {\n      return (\n        <Alert color=\"success\" style={{ opacity: 0.3 }}>\n          <h5>Calculating....</h5>\n        </Alert>\n      );\n    }\n  };\n\n  renderResults = () => {\n    const { stored } = this.state;\n    const rows = stored.map((brew, i) => {\n      return (\n        <React.Fragment key={brew.id}>\n          <tr>\n            <td className=\"align-middle text-left\">\n              <div className=\"mb-2\">{brew.name}</div>\n              <ButtonGroup>\n                <Button onClick={() => this.editBrew(brew)} size={\"sm\"}>\n                  <i className=\"fa fa-edit px-1\"></i>\n                </Button>\n                <Button\n                  color=\"danger\"\n                  onClick={() => this.removeBrew(brew.id)}\n                  size={\"sm\"}\n                >\n                  <i className=\"fa fa-times px-1\"></i>\n                </Button>\n              </ButtonGroup>\n            </td>\n            <td className=\"align-middle text-left\">\n              <div>{brew.price && `$${parseFloat(brew.price).toFixed(2)}`}</div>\n              <div>\n                <span className=\"mr-1\">{brew.alcohol}</span>\n                <small>{brew.alcohol_unit}</small>\n              </div>\n              <div>\n                <span className=\"mr-1\">{brew.volume}</span>\n                <small>{brew.volume_unit}</small>\n              </div>\n            </td>\n            <td className=\"align-middle\">\n              {brew.ppv_calculation && brew.ppv_calculation.toFixed(3)}\n            </td>\n            <td className=\"align-middle\">\n              {brew.apv_calculation && brew.apv_calculation.toFixed(3)}\n            </td>\n            <td className=\"align-middle\">\n              {brew.calculation && brew.calculation.toFixed(3)}\n            </td>\n          </tr>\n        </React.Fragment>\n      );\n    });\n\n    return (\n      rows.length > 0 && (\n        <Table dark={true} className=\"my-5\" size={\"sm\"}>\n          <thead>\n            <tr>\n              <th></th>\n              <th></th>\n              <th className=\"noselect text-nowrap\">\n                <sup>$</sup>/<sub>oz</sub>\n              </th>\n              <th className=\"noselect text-nowrap\">Alc</th>\n              <th className=\"noselect text-nowrap\">\n                <sup>$</sup>/<sub>A</sub>\n              </th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      )\n    );\n  };\n}\n","import React, { Component } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.scss\";\n\nimport { Home } from \"./pages/home\";\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false,\n    displayText: false,\n    displayImages: false,\n    devTools: false,\n    displayGatherer: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <HelmetProvider>\n          <Helmet titleTemplate=\"%s - Jibbermaster\" />\n          <div className=\"app text-light bg-dark col-md-8 offset-md-2 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n            <Switch>\n              <Route path=\"/\" exact render={props => <Home {...props} />} />\n            </Switch>\n          </div>\n        </HelmetProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
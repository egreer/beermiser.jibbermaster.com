{"version":3,"sources":["confirm/Confirm.tsx","pages/home/index.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Confirm","onConfirm","triggerText","triggerButtonParams","headerText","bodyText","confirmText","confirmVariant","useState","open","setOpen","close","confirmed","header","Modal","Header","Title","body","Body","show","onHide","animation","contentClassName","Footer","Col","Button","variant","aria-label","onClick","block","INITIAL_SIZE","id","uuidv4","volume","volume_unit","price","calculation","apv_calculation","ppv_calculation","INITIAL_BREW","name","alcohol","alcohol_unit","sizes","cloneDeep","INITIAL_STATE","stored","brew","Home","state","componentDidMount","store","get","setState","persistState","callback","set","isFunction","handleChange","event","target","value","updateCalculation","handleVolumeChange","console","log","map","v","currentValid","hasSize","some","s","saveCurrent","forEach","size","push","buildBrewSize","assign","orderBy","brewSize","brewId","calculateCalculations","localAlcohol","parseFloat","localVolume","localAPVCalculation","localPPVCalculation","localCalculation","reCalculateAll","storedBrew","removeActiveBrewSize","sizeId","remove","removeBrewSize","removeBrew","editBrew","rebuildBrew","filter","addSize","newSize","last","reset","renderSizes","i","Form","Group","as","Row","xs","span","InputGroup","Control","type","placeholder","onChange","e","min","Append","className","style","borderRadius","step","Text","disabled","length","icon","faTrash","renderCalculations","Table","hover","striped","borderless","responsive","renderCalculation","index","Fragment","renderCalculationColums","colSpan","toFixed","renderResults","rows","ButtonGroup","faEdit","fixedWidth","faTimes","this","title","rel","href","autoComplete","sm","offset","Component","App","isOpen","disclaimerDismissed","displayText","displayImages","devTools","displayGatherer","toggle","titleTemplate","path","exact","render","props","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2db966b2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Button, ButtonProps, Col, Modal } from \"react-bootstrap\";\n\nexport type ConfirmProps = {\n  onConfirm: VoidFunction;\n  triggerText: string;\n  triggerButtonParams?: ButtonProps;\n  headerText?: string;\n  bodyText?: string;\n  confirmText?: string;\n  confirmVariant?: string;\n};\n\nexport const Confirm = ({\n  onConfirm,\n  triggerText,\n  triggerButtonParams,\n  headerText = \"Confirm?\",\n  bodyText,\n  confirmText = \"Save\",\n  confirmVariant = \"primary\"\n}: ConfirmProps) => {\n  const [open, setOpen] = useState(false);\n  const close = (confirmed: boolean) => {\n    setOpen(false);\n    if (confirmed) {\n      onConfirm();\n    }\n  };\n\n  const header = (\n    <Modal.Header>\n      <Modal.Title>{headerText}</Modal.Title>\n    </Modal.Header>\n  );\n\n  const body = <Modal.Body>{bodyText || \"Confirm?\"}</Modal.Body>;\n\n  return (\n    <>\n      <Modal\n        show={open}\n        onHide={close}\n        animation={true}\n        contentClassName=\"bg-dark text-light noselect\"\n      >\n        {header}\n        {bodyText && body}\n        <Modal.Footer>\n          <Col>\n            <Button variant=\"secondary\" aria-label=\"Close Confirmation Modal\" onClick={() => close(false)} block>\n              Close\n            </Button>\n          </Col>\n          <Col>\n            <Button variant={confirmVariant} aria-label={confirmText} onClick={() => close(true)} block>\n              {confirmText}\n            </Button>\n          </Col>\n        </Modal.Footer>\n      </Modal>\n      <Button onClick={() => setOpen(true)} aria-label={triggerText} {...triggerButtonParams}>\n        {triggerText}\n      </Button>\n    </>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport {\n  Button,\n  ButtonGroup,\n  Col,\n  Form,\n  InputGroup,\n  Row,\n  Table\n} from \"react-bootstrap\";\nimport {\n  assign,\n  set,\n  isFunction,\n  cloneDeep,\n  remove,\n  orderBy,\n  some,\n  last\n} from \"lodash\";\nimport store from \"store/dist/store.modern\";\nimport uuidv4 from \"uuid/v4\";\nimport { Size, Brew } from \"../../models/brew\";\nimport { Confirm } from \"../../confirm/Confirm\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faEdit, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nconst INITIAL_SIZE: Size = {\n  id: uuidv4(),\n  volume: \"\",\n  volume_unit: \"Oz\",\n  price: \"\",\n  calculation: null,\n  apv_calculation: null,\n  ppv_calculation: null\n};\n\nconst INITIAL_BREW: Brew = {\n  id: uuidv4(),\n  name: \"\",\n  alcohol: \"\",\n  alcohol_unit: \"APV\",\n  sizes: [cloneDeep(INITIAL_SIZE)]\n};\n\nconst INITIAL_STATE: {\n  stored: Array<any>;\n  brew: Brew;\n} = {\n  stored: [],\n  brew: cloneDeep(INITIAL_BREW)\n};\n\nexport class Home extends Component {\n  state = cloneDeep(INITIAL_STATE);\n\n  componentDidMount = () => {\n    const state = store.get(\"beermiser-state\") || cloneDeep(INITIAL_STATE);\n    this.setState(state);\n  };\n\n  persistState = (state: any, callback?: Function) => {\n    this.setState(state, () => {\n      store.set(\"beermiser-state\", this.state);\n      if (isFunction(callback)) {\n        callback();\n      }\n    });\n  };\n\n  handleChange = (event: any) => {\n    const { brew } = this.state;\n    this.persistState(\n      { brew: set(brew, event.target.name, event.target.value) },\n      this.updateCalculation\n    );\n  };\n\n  handleVolumeChange = (event: any, id: string) => {\n    console.log(event, id);\n    const { brew } = this.state;\n    const { sizes } = this.state.brew;\n    sizes.map(v => {\n      if (v.id === id) {\n        set(v, event.target.name, event.target.value);\n      }\n      return v;\n    });\n    this.persistState(brew, this.updateCalculation);\n  };\n\n  currentValid = () => {\n    const { brew } = this.state;\n    const hasSize = some(brew.sizes, (s: Size) => s.volume || s.price);\n    return brew.name || brew.alcohol || hasSize;\n  };\n\n  saveCurrent = () => {\n    console.log(\"Save Current\", this.state);\n    const { brew, stored } = this.state;\n\n    brew.id = uuidv4();\n    brew.sizes.forEach(size => {\n      size.id = uuidv4();\n      stored.push(this.buildBrewSize(brew, size));\n    });\n\n    this.persistState(\n      assign(cloneDeep(INITIAL_STATE), {\n        stored: orderBy(\n          stored,\n          [\"calculation\", \"apv_calculation\", \"ppv_calculation\"],\n          [\"asc\", \"desc\", \"asc\"]\n        )\n      })\n    );\n  };\n\n  buildBrewSize = (brew: Brew, size: Size) => {\n    console.log(\"brew\", brew);\n    console.log(\"size\", size);\n    const brewSize = assign({}, brew, size);\n    console.log(\"brewSize\", brewSize);\n    assign(brewSize, { brewId: brew.id, id: size.id, sizes: [] });\n    return brewSize;\n  };\n\n  updateCalculation = () => {\n    this.persistState({ brew: this.calculateCalculations(this.state.brew) });\n  };\n\n  calculateCalculations = (brew: Brew) => {\n    const { alcohol, alcohol_unit } = brew;\n    brew.sizes.forEach((size: Size) => {\n      const { volume, volume_unit, price } = size;\n\n      let localAlcohol = parseFloat(alcohol);\n      let localVolume = parseFloat(volume);\n      let localAPVCalculation = null;\n      let localPPVCalculation = null;\n      let localCalculation = null;\n\n      if (alcohol && alcohol_unit === \"ABW\") {\n        localAlcohol = parseFloat(alcohol) * 1.25;\n      }\n\n      if (volume && volume_unit === \"mL\") {\n        localVolume = parseFloat(volume) * 0.03381;\n      } else if (volume && volume_unit === \"L\") {\n        localVolume = parseFloat(volume) * 1000 * 0.03381;\n      }\n\n      if (localAlcohol && localAlcohol > 0 && localVolume && localVolume > 0) {\n        localAPVCalculation = (localAlcohol / 100) * localVolume;\n      }\n\n      if (localVolume && localVolume > 0 && price && parseFloat(price) > 0) {\n        localPPVCalculation = parseFloat(price) / localVolume;\n      }\n\n      if (\n        localAlcohol &&\n        localAlcohol > 0 &&\n        localVolume &&\n        localVolume > 0 &&\n        price &&\n        parseFloat(price) > 0\n      ) {\n        localCalculation =\n          parseFloat(price) / ((localAlcohol / 100) * localVolume);\n      }\n\n      // console.log(\"size\", size);\n      // console.log(\"localCalculation\", localCalculation);\n      // console.log(\"localAPVCalculation\", localAPVCalculation);\n      // console.log(\"localPPVCalculation\", localPPVCalculation);\n      assign(size, {\n        calculation: localCalculation,\n        apv_calculation: localAPVCalculation,\n        ppv_calculation: localPPVCalculation\n      });\n    });\n\n    return brew;\n  };\n\n  reCalculateAll = () => {\n    const { stored } = this.state;\n    stored.forEach(storedBrew => {\n      assign(storedBrew, this.calculateCalculations(storedBrew));\n    });\n    this.persistState({\n      stored: orderBy(\n        stored,\n        [\"calculation\", \"apv_calculation\", \"ppv_calculation\"],\n        [\"asc\", \"desc\", \"asc\"]\n      )\n    });\n  };\n\n  removeActiveBrewSize = (sizeId: string) => {\n    const { brew } = this.state;\n    remove(brew.sizes, size => size.id === sizeId);\n    this.persistState({ brew });\n  };\n\n  removeBrewSize = (id: string) => {\n    const { stored } = this.state;\n    remove(stored, storedBrew => storedBrew.id === id);\n    this.persistState({ stored });\n  };\n\n  removeBrew = (id: string) => {\n    const { stored } = this.state;\n    remove(stored, storedBrew => storedBrew.brewId === id);\n    this.persistState({ stored });\n  };\n\n  editBrew = (brewSize: any) => {\n    if (this.currentValid()) {\n      this.saveCurrent();\n    }\n    const brew = this.rebuildBrew(brewSize.brewId);\n    this.persistState({ brew });\n    this.removeBrew(brew.id);\n  };\n\n  rebuildBrew = (brewId: string): Brew => {\n    const { stored } = this.state;\n    const sizes = stored.filter(brewSize => brewSize.brewId === brewId);\n    const brew: Brew = {\n      id: brewId,\n      name: sizes[0].name,\n      alcohol: sizes[0].alcohol,\n      alcohol_unit: sizes[0].alcohol_unit,\n      sizes\n    };\n    sizes.forEach(s => {\n      delete s.name;\n      delete s.alcohol;\n      delete s.alcohol_unit;\n    });\n    return brew;\n  };\n\n  addSize = () => {\n    const { brew } = this.state;\n    const newSize = cloneDeep(INITIAL_SIZE);\n    newSize.id = uuidv4();\n    newSize.volume_unit = last(brew.sizes)?.volume_unit || newSize.volume_unit;\n    brew.sizes.push(newSize);\n    this.persistState({ brew });\n  };\n\n  reset = () => {\n    this.persistState(cloneDeep(INITIAL_STATE));\n  };\n\n  render() {\n    const { brew } = this.state;\n    const { name, alcohol, alcohol_unit, sizes } = brew;\n\n    return (\n      <div className=\"home\">\n        <Helmet title=\"BeerMiser\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <h1 className=\"text-center pt-2\">BeerMiser</h1>\n        <Form className=\"mt-4\" autoComplete={\"off\"}>\n          <Form.Group as={Row}>\n            <Col sm={12}>\n              <InputGroup>\n                <Form.Control\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  value={name}\n                  onChange={this.handleChange}\n                />\n              </InputGroup>\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Col sm={12}>\n              <InputGroup>\n                <Form.Control\n                  type=\"number\"\n                  name=\"alcohol\"\n                  placeholder=\"Alcohol\"\n                  value={alcohol}\n                  onChange={this.handleChange}\n                  min={0}\n                />\n                <InputGroup.Append>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"alcohol_unit\"\n                    value={alcohol_unit}\n                    className=\"rounded-right\"\n                    style={{ borderRadius: 0 }}\n                    onChange={this.handleChange}\n                  >\n                    <option>APV</option>\n                    <option>ABW</option>\n                  </Form.Control>\n                </InputGroup.Append>\n              </InputGroup>\n            </Col>\n          </Form.Group>\n\n          {this.renderSizes(sizes)}\n\n          <Row className=\"my-4\">\n            <Col sm={{ span: 6, offset: 6 }}>\n              <Button block variant=\"secondary\" onClick={this.addSize} aria-label={\"Add Brew Size\"}>\n                Add Size\n              </Button>\n            </Col>\n          </Row>\n\n          <Row className=\"my-4\">\n            <Col>\n              <div className=\"text-center my-2\">\n                {this.renderCalculations(brew)}\n              </div>\n            </Col>\n          </Row>\n\n          <Row className=\"my-4\">\n            <Col sm={{ span: 6, offset: 6 }}>\n              <Button\n                block\n                variant=\"success\"\n                onClick={this.saveCurrent}\n                disabled={!this.currentValid()}\n                aria-label={\"Save Current Brew\"}\n              >\n                Save\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n\n        <Row>\n          <Col>\n            <div className=\"text-center\">{this.renderResults()}</div>\n          </Col>\n        </Row>\n        {\n          // <div className=\"pt-5\">\n          //   <Button block variant=\"danger\" onClick={this.reCalculateAll}>\n          //     reCalculateAll\n          //   </Button>\n          // </div>\n        }\n        <div className=\"pt-5 pb-3\">\n          <Confirm\n            onConfirm={this.reset}\n            triggerText=\"Reset\"\n            confirmText=\"Reset\"\n            headerText=\"Reset Brews?\"\n            confirmVariant=\"danger\"\n            triggerButtonParams={{ block: true, variant: \"danger\" }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderSizes = (sizes: Array<any>) => {\n    return sizes?.map((v, i) => (\n      <Form.Group as={Row} key={i}>\n        <Col xs={{ span: 6 }}>\n          <InputGroup>\n            <Form.Control\n              type=\"number\"\n              name=\"volume\"\n              placeholder=\"Volume\"\n              value={v.volume}\n              onChange={e => this.handleVolumeChange(e, v.id)}\n              min={0}\n            />\n            <InputGroup.Append>\n              <Form.Control\n                as=\"select\"\n                name=\"volume_unit\"\n                value={v.volume_unit}\n                className=\"rounded-right\"\n                style={{ borderRadius: 0 }}\n                onChange={e => this.handleVolumeChange(e, v.id)}\n              >\n                <option>Oz</option>\n                <option>mL</option>\n                <option>L</option>\n              </Form.Control>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n        <Col xs={{ span: 4 }} className={\"pr-1\"}>\n          <InputGroup>\n            <Form.Control\n              type=\"number\"\n              name=\"price\"\n              placeholder=\"Price\"\n              value={v.price}\n              onChange={e => this.handleVolumeChange(e, v.id)}\n              min={0}\n              step={0.01}\n            />\n            <InputGroup.Append>\n              <InputGroup.Text>$</InputGroup.Text>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n        <Col xs={{ span: 2 }}>\n          <Button\n            variant=\"danger\"\n            block\n            disabled={sizes.length <= 1}\n            onClick={() => this.removeActiveBrewSize(v.id)}\n             aria-label={\"Remove Brew Size\"}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n            {/* <i className=\"fa fa-trash\"></i> */}\n          </Button>\n        </Col>\n      </Form.Group>\n    ));\n  };\n\n  renderCalculations = (brew: Brew) => {\n    return (\n      <Table\n        variant=\"success\"\n        className=\"my-4 rounded\"\n        size=\"sm\"\n        hover\n        striped\n        borderless\n        responsive\n      >\n        <thead>\n          <tr>\n            <th></th>\n            <th className=\"noselect text-nowrap\">\n              <sup>$</sup>/<sub>oz</sub>\n            </th>\n            <th className=\"noselect text-nowrap\">Alc</th>\n            <th className=\"noselect text-nowrap\">\n              <sup>$</sup>/<sub>A</sub>\n            </th>\n          </tr>\n        </thead>\n        <tbody>{brew.sizes.map((s, i) => this.renderCalculation(s, i))}</tbody>\n      </Table>\n    );\n  };\n\n  renderCalculation = (size: Size, index: number) => {\n    if (size) {\n      const { volume, volume_unit } = size;\n\n      return (\n        <React.Fragment key={index}>\n          <tr>\n            <td className=\"align-middle\">\n              <div>\n                <span className=\"mr-1\">{volume}</span>\n                <small>{volume_unit}</small>\n              </div>\n            </td>\n            {this.renderCalculationColums(size) || (\n              <td colSpan={3}>Calculating....</td>\n            )}\n          </tr>\n        </React.Fragment>\n      );\n    }\n  };\n\n  renderCalculationColums = (size: Size) => {\n    const { calculation, apv_calculation, ppv_calculation } = size;\n\n    if (calculation || apv_calculation || ppv_calculation) {\n      return (\n        <>\n          <td className=\"align-middle\">\n            {ppv_calculation && ppv_calculation.toFixed(3)}\n          </td>\n          <td className=\"align-middle\">\n            {apv_calculation && apv_calculation.toFixed(3)}\n          </td>\n          <td className=\"align-middle\">\n            {calculation && calculation.toFixed(3)}\n          </td>\n        </>\n      );\n    }\n  };\n\n  renderResults = () => {\n    const { stored } = this.state;\n    const rows = stored.map(brewSize => {\n      return (\n        <React.Fragment key={brewSize.id}>\n          <tr>\n            <td className=\"align-middle text-left\">\n              <div className=\"mb-2\">{brewSize.name}</div>\n              <ButtonGroup>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => this.editBrew(brewSize)}\n                  size={\"sm\"}\n                  aria-label={`Edit ${brewSize.name}`}\n                >\n                  <FontAwesomeIcon icon={faEdit} className=\"px-1\" fixedWidth size=\"lg\"/>\n                  {/* <i className=\"fa fa-edit px-1\"></i> */}\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => this.removeBrewSize(brewSize.id)}\n                  size={\"sm\"}\n                  aria-label={`Remove ${brewSize.name}`}\n                >\n                  <FontAwesomeIcon icon={faTimes} className=\"px-1\" fixedWidth size=\"lg\"/>\n                  {/* <i className=\"fa fa-times px-1\"></i> */}\n                </Button>\n              </ButtonGroup>\n            </td>\n            <td className=\"align-middle text-left\">\n              <div>\n                {brewSize.price && `$${parseFloat(brewSize.price).toFixed(2)}`}\n              </div>\n              <div>\n                <span className=\"mr-1\">{brewSize.alcohol}</span>\n                <small>{brewSize.alcohol_unit}</small>\n              </div>\n              <div>\n                <span className=\"mr-1\">{brewSize.volume}</span>\n                <small>{brewSize.volume_unit}</small>\n              </div>\n            </td>\n            {this.renderCalculationColums(brewSize)}\n          </tr>\n        </React.Fragment>\n      );\n    });\n\n    return (\n      rows.length > 0 && (\n        <Table variant=\"dark\" className=\"my-4\" size=\"sm\" hover responsive>\n          <thead>\n            <tr>\n              <th></th>\n              <th></th>\n              <th className=\"noselect text-nowrap\">\n                <sup>$</sup>/<sub>oz</sub>\n              </th>\n              <th className=\"noselect text-nowrap\">Alc</th>\n              <th className=\"noselect text-nowrap\">\n                <sup>$</sup>/<sub>A</sub>\n              </th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      )\n    );\n  };\n}\n","import React, { Component } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.scss\";\n\nimport { Home } from \"./pages/home\";\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false,\n    displayText: false,\n    displayImages: false,\n    devTools: false,\n    displayGatherer: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <HelmetProvider>\n          <Helmet titleTemplate=\"%s - Jibbermaster\" />\n          <div className=\"app text-light bg-dark col-md-8 offset-md-2 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n            <Switch>\n              <Route path=\"/\" exact render={props => <Home {...props} />} />\n            </Switch>\n          </div>\n        </HelmetProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  //  <React.StrictMode>\n  <App />,\n  //  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}
{"version":3,"sources":["pages/home/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["INITIAL_SIZE","id","uuidv4","volume","volume_unit","price","calculation","apv_calculation","ppv_calculation","INITIAL_BREW","name","alcohol","alcohol_unit","sizes","cloneDeep","INITIAL_STATE","stored","brew","Home","state","componentDidMount","store","get","setState","persistState","callback","set","isFunction","handleChange","event","target","value","updateCalculation","handleVolumeChange","console","log","map","v","saveCurrent","forEach","size","push","buildBrewSize","assign","orderBy","brewSize","brewId","calculateCalculations","localAlcohol","parseFloat","localVolume","localAPVCalculation","localPPVCalculation","localCalculation","reCalculateAll","storedBrew","removeActiveBrewSize","sizeId","remove","removeBrewSize","removeBrew","editBrew","rebuildBrew","filter","s","addSize","newSize","reset","renderSizes","i","FormGroup","row","key","Col","xs","className","InputGroup","Input","type","placeholder","onChange","e","min","InputGroupAddon","addonType","style","borderRadius","step","Button","color","block","disabled","length","onClick","renderCalculations","Alert","renderCalculation","index","cols","sm","opacity","toFixed","Row","renderResults","rows","Fragment","ButtonGroup","Table","dark","this","title","rel","href","Form","autoComplete","offset","Component","App","isOpen","disclaimerDismissed","displayText","displayImages","devTools","displayGatherer","toggle","titleTemplate","path","exact","render","props","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"idAoBMA,EAAqB,CACzBC,GAAIC,MACJC,OAAQ,GACRC,YAAa,KACbC,MAAO,GACPC,YAAa,KACbC,gBAAiB,KACjBC,gBAAiB,MAGbC,EAAqB,CACzBR,GAAIC,MACJQ,KAAM,GACNC,QAAS,GACTC,aAAc,MACdC,MAAO,CAACC,oBAAUd,KAGde,EAGF,CACFC,OAAQ,GACRC,KAAMH,oBAAUL,IAGLS,EAAb,4MACEC,MAAQL,oBAAUC,GADpB,EAGEK,kBAAoB,WAClB,IAAMD,EAAQE,IAAMC,IAAI,oBAAsBR,oBAAUC,GACxD,EAAKQ,SAASJ,IALlB,EAQEK,aAAe,SAACL,EAAYM,GAC1B,EAAKF,SAASJ,GAAO,WACnBE,IAAMK,IAAI,kBAAmB,EAAKP,OAC9BQ,qBAAWF,IACbA,QAZR,EAiBEG,aAAe,SAACC,GAAgB,IACtBZ,EAAS,EAAKE,MAAdF,KACR,EAAKO,aACH,CAAEP,KAAMS,cAAIT,EAAMY,EAAMC,OAAOpB,KAAMmB,EAAMC,OAAOC,QAClD,EAAKC,oBArBX,EAyBEC,mBAAqB,SAACJ,EAAY5B,GAChCiC,QAAQC,IAAIN,EAAO5B,GAD4B,IAEvCgB,EAAS,EAAKE,MAAdF,KACU,EAAKE,MAAMF,KAArBJ,MACFuB,KAAI,SAAAC,GAIR,OAHIA,EAAEpC,KAAOA,GACXyB,cAAIW,EAAGR,EAAMC,OAAOpB,KAAMmB,EAAMC,OAAOC,OAElCM,KAET,EAAKb,aAAaP,EAAM,EAAKe,oBAnCjC,EAsCEM,YAAc,WACZJ,QAAQC,IAAI,eAAgB,EAAKhB,OADf,MAEO,EAAKA,MAAtBF,EAFU,EAEVA,KAAMD,EAFI,EAEJA,OAEdC,EAAKhB,GAAKC,MACVe,EAAKJ,MAAM0B,SAAQ,SAAAC,GACjBA,EAAKvC,GAAKC,MACVc,EAAOyB,KAAK,EAAKC,cAAczB,EAAMuB,OAGvC,EAAKhB,aACHmB,iBAAO7B,oBAAUC,GAAgB,CAC/BC,OAAQ4B,kBACN5B,EACA,CAAC,cAAe,kBAAmB,mBACnC,CAAC,MAAO,OAAQ,YArD1B,EA2DE0B,cAAgB,SAACzB,EAAYuB,GAC3BN,QAAQC,IAAI,OAAQlB,GACpBiB,QAAQC,IAAI,OAAQK,GACpB,IAAMK,EAAWF,iBAAO,GAAI1B,EAAMuB,GAIlC,OAHAN,QAAQC,IAAI,WAAYU,UACjBA,EAAShC,MAChB8B,iBAAOE,EAAU,CAAEC,OAAQ7B,EAAKhB,GAAIA,GAAIuC,EAAKvC,KACtC4C,GAlEX,EAqEEb,kBAAoB,WAClB,EAAKR,aAAa,CAAEP,KAAM,EAAK8B,sBAAsB,EAAK5B,MAAMF,SAtEpE,EAyEE8B,sBAAwB,SAAC9B,GAAgB,IAC/BN,EAA0BM,EAA1BN,QAASC,EAAiBK,EAAjBL,aAmDjB,OAlDAK,EAAKJ,MAAM0B,SAAQ,SAACC,GAAgB,IAC1BrC,EAA+BqC,EAA/BrC,OAAQC,EAAuBoC,EAAvBpC,YAAaC,EAAUmC,EAAVnC,MAEzB2C,EAAeC,WAAWtC,GAC1BuC,EAAcD,WAAW9C,GACzBgD,EAAsB,KACtBC,EAAsB,KACtBC,EAAmB,KAEnB1C,GAA4B,QAAjBC,IACboC,EAAqC,KAAtBC,WAAWtC,IAGxBR,GAA0B,OAAhBC,EACZ8C,EAAmC,OAArBD,WAAW9C,GAChBA,GAA0B,MAAhBC,IACnB8C,EAAmC,IAArBD,WAAW9C,GAAiB,QAGxC6C,GAAgBA,EAAe,GAAKE,GAAeA,EAAc,IACnEC,EAAuBH,EAAe,IAAOE,GAG3CA,GAAeA,EAAc,GAAK7C,GAAS4C,WAAW5C,GAAS,IACjE+C,EAAsBH,WAAW5C,GAAS6C,GAI1CF,GACAA,EAAe,GACfE,GACAA,EAAc,GACd7C,GACA4C,WAAW5C,GAAS,IAEpBgD,EACEJ,WAAW5C,IAAW2C,EAAe,IAAOE,IAOhDP,iBAAOH,EAAM,CACXlC,YAAa+C,EACb9C,gBAAiB4C,EACjB3C,gBAAiB4C,OAIdnC,GA7HX,EAgIEqC,eAAiB,WAAO,IACdtC,EAAW,EAAKG,MAAhBH,OACRA,EAAOuB,SAAQ,SAAAgB,GACbZ,iBAAOY,EAAY,EAAKR,sBAAsBQ,OAEhD,EAAK/B,aAAa,CAChBR,OAAQ4B,kBACN5B,EACA,CAAC,cAAe,kBAAmB,mBACnC,CAAC,MAAO,OAAQ,WAzIxB,EA8IEwC,qBAAuB,SAACC,GAAoB,IAClCxC,EAAS,EAAKE,MAAdF,KACRyC,iBAAOzC,EAAKJ,OAAO,SAAA2B,GAAI,OAAIA,EAAKvC,KAAOwD,KACvC,EAAKjC,aAAa,CAAEP,UAjJxB,EAoJE0C,eAAiB,SAAC1D,GAAgB,IACxBe,EAAW,EAAKG,MAAhBH,OACR0C,iBAAO1C,GAAQ,SAAAuC,GAAU,OAAIA,EAAWtD,KAAOA,KAC/C,EAAKuB,aAAa,CAAER,YAvJxB,EA0JE4C,WAAa,SAAC3D,GAAgB,IACpBe,EAAW,EAAKG,MAAhBH,OACR0C,iBAAO1C,GAAQ,SAAAuC,GAAU,OAAIA,EAAWT,SAAW7C,KACnD,EAAKuB,aAAa,CAAER,YA7JxB,EAgKE6C,SAAW,SAAChB,GACV,IAAM5B,EAAO,EAAK6C,YAAYjB,EAASC,QACvC,EAAKtB,aAAa,CAAEP,SACpB,EAAK2C,WAAW3C,EAAKhB,KAnKzB,EAsKE6D,YAAc,SAAChB,GAA0B,IAEjCjC,EADa,EAAKM,MAAhBH,OACa+C,QAAO,SAAAlB,GAAQ,OAAIA,EAASC,SAAWA,KACtD7B,EAAa,CACjBhB,GAAI6C,EACJpC,KAAMG,EAAM,GAAGH,KACfC,QAASE,EAAM,GAAGF,QAClBC,aAAcC,EAAM,GAAGD,aACvBC,SAOF,OALAA,EAAM0B,SAAQ,SAAAyB,UACLA,EAAEtD,YACFsD,EAAErD,eACFqD,EAAEpD,gBAEJK,GArLX,EAwLEgD,QAAU,WAAO,IACPhD,EAAS,EAAKE,MAAdF,KACFiD,EAAUpD,oBAAUd,GAC1BkE,EAAQjE,GAAKC,MACbe,EAAKJ,MAAM4B,KAAKyB,GAChB,EAAK1C,aAAa,CAAEP,UA7LxB,EAgMEkD,MAAQ,WACN,EAAK3C,aAAaV,oBAAUC,KAjMhC,EA4SEqD,YAAc,SAACvD,GACb,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAOuB,KAAI,SAACC,EAAGgC,GAAJ,OAChB,kBAACC,EAAA,EAAD,CAAWC,KAAG,EAACC,IAAKH,GAClB,kBAACI,EAAA,EAAD,CAAKC,GAAI,CAAElC,KAAM,GAAKmC,UAAW,gBAC/B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLpE,KAAK,SACLqE,YAAY,SACZhD,MAAOM,EAAElC,OACT6E,SAAU,SAAAC,GAAC,OAAI,EAAKhD,mBAAmBgD,EAAG5C,EAAEpC,KAC5CiF,IAAK,IAEP,kBAACC,EAAA,EAAD,CAAiBC,UAAU,UACzB,kBAACP,EAAA,EAAD,CACEC,KAAK,SACLpE,KAAK,cACLqB,MAAOM,EAAEjC,YACTuE,UAAU,gBACVU,MAAO,CAAEC,aAAc,GACvBN,SAAU,SAAAC,GAAC,OAAI,EAAKhD,mBAAmBgD,EAAG5C,EAAEpC,MAE5C,sCACA,sCACA,yCAKR,kBAACwE,EAAA,EAAD,CAAKC,GAAI,CAAElC,KAAM,GAAKmC,UAAW,qBAC/B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLpE,KAAK,QACLqE,YAAY,QACZhD,MAAOM,EAAEhC,MACT2E,SAAU,SAAAC,GAAC,OAAI,EAAKhD,mBAAmBgD,EAAG5C,EAAEpC,KAC5CiF,IAAK,EACLK,KAAM,MAER,kBAACJ,EAAA,EAAD,CAAiBC,UAAU,UAA3B,OAGJ,kBAACX,EAAA,EAAD,CAAKC,GAAI,CAAElC,KAAM,IACf,kBAACgD,EAAA,EAAD,CACEC,MAAM,SACNC,OAAK,EACLC,SAAU9E,EAAM+E,QAAU,EAC1BC,QAAS,kBAAM,EAAKrC,qBAAqBnB,EAAEpC,MAE3C,uBAAG0E,UAAU,uBA9VzB,EAqWEmB,mBAAqB,SAAC7E,GACpB,OACE,kBAAC8E,EAAA,EAAD,CAAON,MAAM,UAAUd,UAAU,gBAC9B1D,EAAKJ,MAAMuB,KAAI,SAAC4B,EAAGK,GAAJ,OAAU,EAAK2B,kBAAkBhC,EAAGK,QAxW5D,EA6WE2B,kBAAoB,SAACxD,EAAYyD,GAC/B,GAAIzD,EAAM,CAAC,IAEPlC,EAKEkC,EALFlC,YACAC,EAIEiC,EAJFjC,gBACAC,EAGEgC,EAHFhC,gBACAL,EAEEqC,EAFFrC,OACAC,EACEoC,EADFpC,YAGE8F,EACF,kBAACzB,EAAA,EAAD,CAAKC,GAAI,EAAGyB,GAAI,EAAGd,MAAO,CAAEe,QAAS,KACnC,gDAuCJ,OAnCI9F,GAAeC,GAAmBC,KACpC0F,EACE,oCACE,kBAACzB,EAAA,EAAD,CAAKC,GAAI,EAAGyB,GAAI,GACb7F,GACC,4BACGA,EAAY+F,QAAQ,GACrB,2BAAO1B,UAAU,6BACf,kCADF,IACe,qCAKrB,kBAACF,EAAA,EAAD,CAAKC,GAAI,EAAGyB,GAAI,GACb5F,GACC,4BACGA,EAAgB8F,QAAQ,GACzB,2BAAO1B,UAAU,iBAAjB,SAIN,kBAACF,EAAA,EAAD,CAAKC,GAAI,EAAGyB,GAAI,GACb3F,GACC,4BACGA,EAAgB6F,QAAQ,GACzB,2BAAO1B,UAAU,iBACf,kCADF,IACe,wCAUzB,kBAAC2B,EAAA,EAAD,CAAK9B,IAAKyB,GACR,kBAACxB,EAAA,EAAD,CAAKC,GAAI,EAAGyB,GAAI,GACd,4BACGhG,EADH,IACYC,IAGb8F,KAvaX,EAmbEK,cAAgB,WAAO,IAEfC,EADa,EAAKrF,MAAhBH,OACYoB,KAAI,SAAAS,GACtB,OACE,kBAAC,IAAM4D,SAAP,CAAgBjC,IAAK3B,EAAS5C,IAC5B,4BACE,wBAAI0E,UAAU,0BACZ,yBAAKA,UAAU,QAAQ9B,EAASnC,MAChC,kBAACgG,EAAA,EAAD,KACE,kBAAClB,EAAA,EAAD,CAAQK,QAAS,kBAAM,EAAKhC,SAAShB,IAAWL,KAAM,MACpD,uBAAGmC,UAAU,qBAEf,kBAACa,EAAA,EAAD,CACEC,MAAM,SACNI,QAAS,kBAAM,EAAKlC,eAAed,EAAS5C,KAC5CuC,KAAM,MAEN,uBAAGmC,UAAU,wBAInB,wBAAIA,UAAU,0BACZ,6BACG9B,EAASxC,OAAT,WAAsB4C,WAAWJ,EAASxC,OAAOgG,QAAQ,KAE5D,6BACE,0BAAM1B,UAAU,QAAQ9B,EAASlC,SACjC,+BAAQkC,EAASjC,eAEnB,6BACE,0BAAM+D,UAAU,QAAQ9B,EAAS1C,QACjC,+BAAQ0C,EAASzC,eAGrB,wBAAIuE,UAAU,gBACX9B,EAASrC,iBAAmBqC,EAASrC,gBAAgB6F,QAAQ,IAEhE,wBAAI1B,UAAU,gBACX9B,EAAStC,iBAAmBsC,EAAStC,gBAAgB8F,QAAQ,IAEhE,wBAAI1B,UAAU,gBACX9B,EAASvC,aAAeuC,EAASvC,YAAY+F,QAAQ,SAOhE,OACEG,EAAKZ,OAAS,GACZ,kBAACe,EAAA,EAAD,CAAOC,MAAM,EAAMjC,UAAU,OAAOnC,KAAM,MACxC,+BACE,4BACE,6BACA,6BACA,wBAAImC,UAAU,wBACZ,kCADF,IACe,oCAEf,wBAAIA,UAAU,wBAAd,OACA,wBAAIA,UAAU,wBACZ,kCADF,IACe,mCAEf,+BAGJ,+BAAQ6B,KApflB,uDAoMY,IACAvF,EAAS4F,KAAK1F,MAAdF,KACAP,EAAuCO,EAAvCP,KAAMC,EAAiCM,EAAjCN,QAASC,EAAwBK,EAAxBL,aAAcC,EAAUI,EAAVJ,MAErC,OACE,yBAAK8D,UAAU,QACb,kBAAC,IAAD,CAAQmC,MAAM,aACZ,0BACEC,IAAI,WACJC,KAA+B,oBAGnC,wBAAIrC,UAAU,eAAd,aACA,kBAACsC,EAAA,EAAD,CAAMtC,UAAU,OAAOuC,aAAc,OACnC,kBAAC5C,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACE,EAAA,EAAD,CAAK0B,GAAI,IACP,kBAACvB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLpE,KAAK,OACLqE,YAAY,OACZhD,MAAOrB,EACPsE,SAAU6B,KAAKjF,kBAMvB,kBAAC0C,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACE,EAAA,EAAD,CAAK0B,GAAI,IACP,kBAACvB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLpE,KAAK,UACLqE,YAAY,UACZhD,MAAOpB,EACPqE,SAAU6B,KAAKjF,aACfsD,IAAK,IAEP,kBAACC,EAAA,EAAD,CAAiBC,UAAU,UACzB,kBAACP,EAAA,EAAD,CACEC,KAAK,SACLpE,KAAK,eACLqB,MAAOnB,EACP+D,UAAU,gBACVU,MAAO,CAAEC,aAAc,GACvBN,SAAU6B,KAAKjF,cAEf,uCACA,4CAOTiF,KAAKzC,YAAYvD,GAElB,kBAACyF,EAAA,EAAD,KACE,kBAAC7B,EAAA,EAAD,CAAK0B,GAAI,CAAE3D,KAAM,EAAG2E,OAAQ,IAC1B,kBAAC3B,EAAA,EAAD,CAAQE,OAAK,EAACG,QAASgB,KAAK5C,SAA5B,cAMJ,kBAACqC,EAAA,EAAD,KACE,kBAAC7B,EAAA,EAAD,KACE,yBAAKE,UAAU,oBACZkC,KAAKf,mBAAmB7E,MAK/B,kBAACqF,EAAA,EAAD,KACE,kBAAC7B,EAAA,EAAD,CAAK0B,GAAI,CAAE3D,KAAM,EAAG2E,OAAQ,IAC1B,kBAAC3B,EAAA,EAAD,CAAQE,OAAK,EAACD,MAAM,UAAUI,QAASgB,KAAKvE,aAA5C,WAON,kBAACgE,EAAA,EAAD,KACE,kBAAC7B,EAAA,EAAD,KACE,yBAAKE,UAAU,oBAAoBkC,KAAKN,mBAU5C,yBAAK5B,UAAU,QACb,kBAACa,EAAA,EAAD,CAAQE,OAAK,EAACD,MAAM,SAASI,QAASgB,KAAK1C,OAA3C,eApSV,GAA0BiD,aCNXC,E,4MA/BblG,MAAQ,CACNmG,QAAQ,EACRC,qBAAqB,EACrBC,aAAa,EACbC,eAAe,EACfC,UAAU,EACVC,iBAAiB,G,EAGnBC,OAAS,WACP,EAAKrG,SAAS,CACZ+F,QAAS,EAAKnG,MAAMmG,U,uDAKtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQO,cAAc,sBACtB,yBAAKlD,UAAU,yFACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmD,KAAK,IAAIC,OAAK,EAACC,OAAQ,SAAAC,GAAK,OAAI,kBAAC,EAASA,c,GAvB7Cb,aCIZc,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA2CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9H,QACfwH,UAAUC,cAAcQ,YAI1BlH,QAAQC,IACN,iHAKEuG,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlB7G,QAAQC,IAAI,sCAGRuG,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAAC,GACLtH,QAAQsH,MAAM,4CAA6CA,MC/FjEC,IAASzB,OAEP,kBAAC,EAAD,MAEA0B,SAASC,eAAe,SDiBnB,SAAkBjB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,GAAwBzB,OAAOC,SAASrB,MACpD8C,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMoB,GAAN,sBAEP3B,IAgEV,SAAiCO,EAAeC,GAE9CsB,MAAMvB,EAAO,CACXwB,QAAS,CAAE,iBAAkB,YAE5BnB,MAAK,SAAAoB,GAEJ,IAAMC,EAAcD,EAASD,QAAQ3I,IAAI,gBAEnB,MAApB4I,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C1B,UAAUC,cAAc0B,MAAMxB,MAAK,SAAAC,GACjCA,EAAawB,aAAazB,MAAK,WAC7BV,OAAOC,SAASmC,eAKpBhC,EAAgBC,EAAOC,MAG1Ba,OAAM,WACLrH,QAAQC,IACN,oEAvFAsI,CAAwBhC,EAAOC,GAI/BC,UAAUC,cAAc0B,MAAMxB,MAAK,WACjC5G,QAAQC,IACN,iHAMJqG,EAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.289db8a1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n  Table\n} from \"reactstrap\";\nimport { assign, set, isFunction, cloneDeep, remove, orderBy } from \"lodash\";\nimport store from \"store\";\nimport uuidv4 from \"uuid/v4\";\nimport { Size, Brew } from \"../../models/brew\";\n\nconst INITIAL_SIZE: Size = {\n  id: uuidv4(),\n  volume: \"\",\n  volume_unit: \"Oz\",\n  price: \"\",\n  calculation: null,\n  apv_calculation: null,\n  ppv_calculation: null\n};\n\nconst INITIAL_BREW: Brew = {\n  id: uuidv4(),\n  name: \"\",\n  alcohol: \"\",\n  alcohol_unit: \"APV\",\n  sizes: [cloneDeep(INITIAL_SIZE)]\n};\n\nconst INITIAL_STATE: {\n  stored: Array<any>;\n  brew: Brew;\n} = {\n  stored: [],\n  brew: cloneDeep(INITIAL_BREW)\n};\n\nexport class Home extends Component {\n  state = cloneDeep(INITIAL_STATE);\n\n  componentDidMount = () => {\n    const state = store.get(\"beermiser-state\") || cloneDeep(INITIAL_STATE);\n    this.setState(state);\n  };\n\n  persistState = (state: any, callback?: Function) => {\n    this.setState(state, () => {\n      store.set(\"beermiser-state\", this.state);\n      if (isFunction(callback)) {\n        callback();\n      }\n    });\n  };\n\n  handleChange = (event: any) => {\n    const { brew } = this.state;\n    this.persistState(\n      { brew: set(brew, event.target.name, event.target.value) },\n      this.updateCalculation\n    );\n  };\n\n  handleVolumeChange = (event: any, id: string) => {\n    console.log(event, id);\n    const { brew } = this.state;\n    const { sizes } = this.state.brew;\n    sizes.map(v => {\n      if (v.id === id) {\n        set(v, event.target.name, event.target.value);\n      }\n      return v;\n    });\n    this.persistState(brew, this.updateCalculation);\n  };\n\n  saveCurrent = () => {\n    console.log(\"Save Current\", this.state);\n    const { brew, stored } = this.state;\n\n    brew.id = uuidv4();\n    brew.sizes.forEach(size => {\n      size.id = uuidv4();\n      stored.push(this.buildBrewSize(brew, size));\n    });\n\n    this.persistState(\n      assign(cloneDeep(INITIAL_STATE), {\n        stored: orderBy(\n          stored,\n          [\"calculation\", \"apv_calculation\", \"ppv_calculation\"],\n          [\"asc\", \"desc\", \"asc\"]\n        )\n      })\n    );\n  };\n\n  buildBrewSize = (brew: Brew, size: Size) => {\n    console.log(\"brew\", brew);\n    console.log(\"size\", size);\n    const brewSize = assign({}, brew, size);\n    console.log(\"brewSize\", brewSize);\n    delete brewSize.sizes;\n    assign(brewSize, { brewId: brew.id, id: size.id });\n    return brewSize;\n  };\n\n  updateCalculation = () => {\n    this.persistState({ brew: this.calculateCalculations(this.state.brew) });\n  };\n\n  calculateCalculations = (brew: Brew) => {\n    const { alcohol, alcohol_unit } = brew;\n    brew.sizes.forEach((size: Size) => {\n      const { volume, volume_unit, price } = size;\n\n      let localAlcohol = parseFloat(alcohol);\n      let localVolume = parseFloat(volume);\n      let localAPVCalculation = null;\n      let localPPVCalculation = null;\n      let localCalculation = null;\n\n      if (alcohol && alcohol_unit === \"ABW\") {\n        localAlcohol = parseFloat(alcohol) * 1.25;\n      }\n\n      if (volume && volume_unit === \"mL\") {\n        localVolume = parseFloat(volume) * 0.03381;\n      } else if (volume && volume_unit === \"L\") {\n        localVolume = parseFloat(volume) * 1000 * 0.03381;\n      }\n\n      if (localAlcohol && localAlcohol > 0 && localVolume && localVolume > 0) {\n        localAPVCalculation = (localAlcohol / 100) * localVolume;\n      }\n\n      if (localVolume && localVolume > 0 && price && parseFloat(price) > 0) {\n        localPPVCalculation = parseFloat(price) / localVolume;\n      }\n\n      if (\n        localAlcohol &&\n        localAlcohol > 0 &&\n        localVolume &&\n        localVolume > 0 &&\n        price &&\n        parseFloat(price) > 0\n      ) {\n        localCalculation =\n          parseFloat(price) / ((localAlcohol / 100) * localVolume);\n      }\n\n      // console.log(\"size\", size);\n      // console.log(\"localCalculation\", localCalculation);\n      // console.log(\"localAPVCalculation\", localAPVCalculation);\n      // console.log(\"localPPVCalculation\", localPPVCalculation);\n      assign(size, {\n        calculation: localCalculation,\n        apv_calculation: localAPVCalculation,\n        ppv_calculation: localPPVCalculation\n      });\n    });\n\n    return brew;\n  };\n\n  reCalculateAll = () => {\n    const { stored } = this.state;\n    stored.forEach(storedBrew => {\n      assign(storedBrew, this.calculateCalculations(storedBrew));\n    });\n    this.persistState({\n      stored: orderBy(\n        stored,\n        [\"calculation\", \"apv_calculation\", \"ppv_calculation\"],\n        [\"asc\", \"desc\", \"asc\"]\n      )\n    });\n  };\n\n  removeActiveBrewSize = (sizeId: string) => {\n    const { brew } = this.state;\n    remove(brew.sizes, size => size.id === sizeId);\n    this.persistState({ brew });\n  };\n\n  removeBrewSize = (id: string) => {\n    const { stored } = this.state;\n    remove(stored, storedBrew => storedBrew.id === id);\n    this.persistState({ stored });\n  };\n\n  removeBrew = (id: string) => {\n    const { stored } = this.state;\n    remove(stored, storedBrew => storedBrew.brewId === id);\n    this.persistState({ stored });\n  };\n\n  editBrew = (brewSize: any) => {\n    const brew = this.rebuildBrew(brewSize.brewId);\n    this.persistState({ brew });\n    this.removeBrew(brew.id);\n  };\n\n  rebuildBrew = (brewId: string): Brew => {\n    const { stored } = this.state;\n    const sizes = stored.filter(brewSize => brewSize.brewId === brewId);\n    const brew: Brew = {\n      id: brewId,\n      name: sizes[0].name,\n      alcohol: sizes[0].alcohol,\n      alcohol_unit: sizes[0].alcohol_unit,\n      sizes\n    };\n    sizes.forEach(s => {\n      delete s.name;\n      delete s.alcohol;\n      delete s.alcohol_unit;\n    });\n    return brew;\n  };\n\n  addSize = () => {\n    const { brew } = this.state;\n    const newSize = cloneDeep(INITIAL_SIZE);\n    newSize.id = uuidv4();\n    brew.sizes.push(newSize);\n    this.persistState({ brew });\n  };\n\n  reset = () => {\n    this.persistState(cloneDeep(INITIAL_STATE));\n  };\n\n  render() {\n    const { brew } = this.state;\n    const { name, alcohol, alcohol_unit, sizes } = brew;\n\n    return (\n      <div className=\"home\">\n        <Helmet title=\"BeerMiser\">\n          <link\n            rel=\"manifest\"\n            href={process.env.PUBLIC_URL + \"/manifest.json\"}\n          />\n        </Helmet>\n        <h1 className=\"text-center\">BeerMiser</h1>\n        <Form className=\"mt-4\" autoComplete={\"off\"}>\n          <FormGroup row>\n            <Col sm={12}>\n              <InputGroup>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  value={name}\n                  onChange={this.handleChange}\n                />\n              </InputGroup>\n            </Col>\n          </FormGroup>\n\n          <FormGroup row>\n            <Col sm={12}>\n              <InputGroup>\n                <Input\n                  type=\"number\"\n                  name=\"alcohol\"\n                  placeholder=\"Alcohol\"\n                  value={alcohol}\n                  onChange={this.handleChange}\n                  min={0}\n                />\n                <InputGroupAddon addonType=\"append\">\n                  <Input\n                    type=\"select\"\n                    name=\"alcohol_unit\"\n                    value={alcohol_unit}\n                    className=\"rounded-right\"\n                    style={{ borderRadius: 0 }}\n                    onChange={this.handleChange}\n                  >\n                    <option>APV</option>\n                    <option>ABW</option>\n                  </Input>\n                </InputGroupAddon>\n              </InputGroup>\n            </Col>\n          </FormGroup>\n\n          {this.renderSizes(sizes)}\n\n          <Row>\n            <Col sm={{ size: 6, offset: 6 }}>\n              <Button block onClick={this.addSize}>\n                Add Size\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <div className=\"text-center my-2\">\n                {this.renderCalculations(brew)}\n              </div>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col sm={{ size: 6, offset: 6 }}>\n              <Button block color=\"success\" onClick={this.saveCurrent}>\n                Save\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n\n        <Row>\n          <Col>\n            <div className=\"text-center my-2\">{this.renderResults()}</div>\n          </Col>\n        </Row>\n        {\n          // <div className=\"pt-5\">\n          //   <Button block color=\"danger\" onClick={this.reCalculateAll}>\n          //     reCalculateAll\n          //   </Button>\n          // </div>\n        }\n        <div className=\"pt-5\">\n          <Button block color=\"danger\" onClick={this.reset}>\n            Reset\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderSizes = (sizes: Array<any>) => {\n    return sizes?.map((v, i) => (\n      <FormGroup row key={i}>\n        <Col xs={{ size: 6 }} className={\"mb-3 mb-sm-0\"}>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              name=\"volume\"\n              placeholder=\"Volume\"\n              value={v.volume}\n              onChange={e => this.handleVolumeChange(e, v.id)}\n              min={0}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Input\n                type=\"select\"\n                name=\"volume_unit\"\n                value={v.volume_unit}\n                className=\"rounded-right\"\n                style={{ borderRadius: 0 }}\n                onChange={e => this.handleVolumeChange(e, v.id)}\n              >\n                <option>Oz</option>\n                <option>mL</option>\n                <option>L</option>\n              </Input>\n            </InputGroupAddon>\n          </InputGroup>\n        </Col>\n        <Col xs={{ size: 4 }} className={\"mb-3 mb-sm-0 pr-1\"}>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              name=\"price\"\n              placeholder=\"Price\"\n              value={v.price}\n              onChange={e => this.handleVolumeChange(e, v.id)}\n              min={0}\n              step={0.01}\n            />\n            <InputGroupAddon addonType=\"append\">$</InputGroupAddon>\n          </InputGroup>\n        </Col>\n        <Col xs={{ size: 2 }}>\n          <Button\n            color=\"danger\"\n            block\n            disabled={sizes.length <= 1}\n            onClick={() => this.removeActiveBrewSize(v.id)}\n          >\n            <i className=\"fa fa-trash\"></i>\n          </Button>\n        </Col>\n      </FormGroup>\n    ));\n  };\n\n  renderCalculations = (brew: Brew) => {\n    return (\n      <Alert color=\"success\" className=\"calculations\">\n        {brew.sizes.map((s, i) => this.renderCalculation(s, i))}\n      </Alert>\n    );\n  };\n\n  renderCalculation = (size: Size, index: number) => {\n    if (size) {\n      const {\n        calculation,\n        apv_calculation,\n        ppv_calculation,\n        volume,\n        volume_unit\n      } = size;\n\n      let cols = (\n        <Col xs={6} sm={9} style={{ opacity: 0.3 }}>\n          <h5>Calculating....</h5>\n        </Col>\n      );\n\n      if (calculation || apv_calculation || ppv_calculation) {\n        cols = (\n          <>\n            <Col xs={6} sm={3}>\n              {calculation && (\n                <h5>\n                  {calculation.toFixed(3)}\n                  <small className=\"noselect px-1 text-nowrap\">\n                    <sup>$</sup>/<sub>A</sub>\n                  </small>\n                </h5>\n              )}\n            </Col>\n            <Col xs={6} sm={3}>\n              {apv_calculation && (\n                <h5>\n                  {apv_calculation.toFixed(3)}\n                  <small className=\"noselect px-1\">Alc</small>\n                </h5>\n              )}\n            </Col>\n            <Col xs={6} sm={3}>\n              {ppv_calculation && (\n                <h5>\n                  {ppv_calculation.toFixed(3)}\n                  <small className=\"noselect px-1\">\n                    <sup>$</sup>/<sub>oz</sub>\n                  </small>\n                </h5>\n              )}\n            </Col>\n          </>\n        );\n      }\n\n      return (\n        <Row key={index}>\n          <Col xs={6} sm={3}>\n            <h5>\n              {volume} {volume_unit}\n            </h5>\n          </Col>\n          {cols}\n        </Row>\n      );\n    }\n\n    //return; <></>;\n    //   <Alert color=\"success\" style={{ opacity: 0.3 }}>\n    //     <h5>Calculating....</h5>\n    //   </Alert>\n    // );\n  };\n\n  renderResults = () => {\n    const { stored } = this.state;\n    const rows = stored.map(brewSize => {\n      return (\n        <React.Fragment key={brewSize.id}>\n          <tr>\n            <td className=\"align-middle text-left\">\n              <div className=\"mb-2\">{brewSize.name}</div>\n              <ButtonGroup>\n                <Button onClick={() => this.editBrew(brewSize)} size={\"sm\"}>\n                  <i className=\"fa fa-edit px-1\"></i>\n                </Button>\n                <Button\n                  color=\"danger\"\n                  onClick={() => this.removeBrewSize(brewSize.id)}\n                  size={\"sm\"}\n                >\n                  <i className=\"fa fa-times px-1\"></i>\n                </Button>\n              </ButtonGroup>\n            </td>\n            <td className=\"align-middle text-left\">\n              <div>\n                {brewSize.price && `$${parseFloat(brewSize.price).toFixed(2)}`}\n              </div>\n              <div>\n                <span className=\"mr-1\">{brewSize.alcohol}</span>\n                <small>{brewSize.alcohol_unit}</small>\n              </div>\n              <div>\n                <span className=\"mr-1\">{brewSize.volume}</span>\n                <small>{brewSize.volume_unit}</small>\n              </div>\n            </td>\n            <td className=\"align-middle\">\n              {brewSize.ppv_calculation && brewSize.ppv_calculation.toFixed(3)}\n            </td>\n            <td className=\"align-middle\">\n              {brewSize.apv_calculation && brewSize.apv_calculation.toFixed(3)}\n            </td>\n            <td className=\"align-middle\">\n              {brewSize.calculation && brewSize.calculation.toFixed(3)}\n            </td>\n          </tr>\n        </React.Fragment>\n      );\n    });\n\n    return (\n      rows.length > 0 && (\n        <Table dark={true} className=\"my-5\" size={\"sm\"}>\n          <thead>\n            <tr>\n              <th></th>\n              <th></th>\n              <th className=\"noselect text-nowrap\">\n                <sup>$</sup>/<sub>oz</sub>\n              </th>\n              <th className=\"noselect text-nowrap\">Alc</th>\n              <th className=\"noselect text-nowrap\">\n                <sup>$</sup>/<sub>A</sub>\n              </th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      )\n    );\n  };\n}\n","import React, { Component } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.scss\";\n\nimport { Home } from \"./pages/home\";\n\nclass App extends Component {\n  state = {\n    isOpen: false,\n    disclaimerDismissed: false,\n    displayText: false,\n    displayImages: false,\n    devTools: false,\n    displayGatherer: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <HelmetProvider>\n          <Helmet titleTemplate=\"%s - Jibbermaster\" />\n          <div className=\"app text-light bg-dark col-md-8 offset-md-2 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\n            <Switch>\n              <Route path=\"/\" exact render={props => <Home {...props} />} />\n            </Switch>\n          </div>\n        </HelmetProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  //  <React.StrictMode>\n  <App />,\n  //  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}